/**
* Inline Edit:
* `.c-inline-edit` sınıfı ile kullanılır. Düzenleme kipine girmek için `.c-inline-edit--editable`, işlem yapıldığı anda input alanını etkisiz hale getirmek için `.c-inline-edit--processing` ve hata oluştuğunda ilgili alanları işaretlemek için `.c-inline-edit--error` sınıfları verilir.
*
* @example
* <span class="c-inline-edit">
*   <span class="c-inline-edit__inline-text">
*     <span class="c-inline-edit__inline-text-content">This is long text value and it should be override the parent's width</span>
*     <a href="#" class="c-inline-edit__edit-button"><i class="icon__n icon__n--edit"></i></a>
*   </span>
*   <span class="c-inline-edit__input">
*     <input type="text" placeholder="Placeholder Text">
*     <a href="#" class="c-inline-edit__return">
*       <div class="c-promise-icon c-promise-icon--autosize">
*         <div class="c-promise-icon__before">
*           <i class="icon__n icon__n--keyboard_return"></i>
*         </div>
*         <div class="c-promise-icon__spinner c-promise-icon__spinner--sm">
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*           <div class="c-promise-icon__spinner-blade"></div>
*         </div>
*       </div>
*     </a>
*
*   </span>
* </span>
*/


// Variables
$c-inline-edit: (
  inline-text: #35383d,
  inline-text-size: 13px,
  input-text-color: #35383d,
  input-height: 36px,
  input-padding: 10px,
  input-placeholder: #9d9d9d,
  input-placeholder-focused: #35383d,
  input-border: #dcdce4,
  input-disabled-bg: #f7f7f7,
  input-disabled-text-color: lighten(#35383d, 50%),
  inline-edit-icon: #bdbdbd,
  inline-edit-icon-hover: darken(#bdbdbd, 25%),
  inline-edit-icon-size: 24px,
  error-color: #e10f21,
);

// Merge settings and defaults
$c-inline-edit: map-merge($c-inline-edit, getSettingsMap("c-inline-edit"));

// Set shortcuts
$c-map: $c-inline-edit;


.c-inline-edit {
  position: relative;
  font-size: map-get($c-map, inline-text-size);
  &--editable {
    .c-inline-edit__inline-text, .c-inline-edit__edit-button { display: none }
    .c-inline-edit__input, .c-inline-edit__return { display: inline-block }
  }
  &--processing {
    input, textarea {
      &[disabled] {
        background-color: map-get($c-map, input-disabled-bg);
        color: map-get($c-map, input-disabled-text-color);
      }
    }
    .c-inline-edit__return { display: none }
  }
  &--error {
    input, textarea {
      color: map-get($c-map, error-color) !important;
      border-color: map-get($c-map, error-color) !important;
      @include t--placeholder {
        color: map-get($c-map, error-color) !important;
      }
    }
  }
  a {
    position: relative;
    top: em(4px, map-get($c-map, inline-text-size));
    left: em(2px, map-get($c-map, inline-text-size));
    color: map-get($c-map, inline-edit-icon);
    font-size: em(map-get($c-map, inline-edit-icon-size), map-get($c-map, inline-text-size));
    &:hover {
      color: map-get($c-map, inline-edit-icon-hover);
    }
  }

  &__inline-text {
    width: 100%;
    @include ffamily("regular");
    color: map-get($c-map, inline-text);
    white-space: nowrap;
  }

  &__inline-text-content {
    position: relative;
    top: em(4px, map-get($c-map, inline-text-size));
    display: inline-block;
    overflow: hidden;
    max-width: calc(100% - #{em(map-get($c-map, inline-edit-icon-size) + 8px, map-get($c-map, inline-text-size))});
    text-overflow: ellipsis;
  }

  &__input {
    display: none;
    width: 100%;
    input, textarea {
      padding-left: em(map-get($c-map, input-padding), map-get($c-map, inline-text-size));
      padding-right: em(map-get($c-map, input-padding), map-get($c-map, inline-text-size));
      max-width: calc(100% - #{em(map-get($c-map, inline-edit-icon-size) + 8px, map-get($c-map, inline-text-size))});
      width: 100%;
      height: em(map-get($c-map, input-height), map-get($c-map, inline-text-size));
      @include ffamily("regular");
      color: map-get($c-map, input-text-color);
      border-radius: 2px;
      border: 1px solid map-get($c-map, input-border);
      &:focus {
        outline: 0;
      }
      @include t--placeholder {
        color: map-get($c-map, input-placeholder);
        opacity: 1;
      }
    }
  }
}
